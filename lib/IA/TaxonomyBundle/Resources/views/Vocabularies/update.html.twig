{% extends "layout.html.twig" %}
{% block head_styles %}
    {{ parent() }}
    {% stylesheets filter='uglifycss, cssrewrite' output="assets/build/wct.css"
        'bundles/iawebcontentthief/css/styles.css'
        'bundles/iataxonomy/vendor/bootstrap-gtreetable/dist/bootstrap-gtreetable.min.css'
    %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}
{% block title %}{{ parent() }} :: Edit Vocabulary{% endblock %}

{% block pageTitle %}<i class="icon_genius"></i> Edit Vocabulary{% endblock %}

{% block content %}
    <div class="row">   
        <div class="col-lg-12">
            {% include 'IATaxonomyBundle:Vocabularies/Form:_vocabulary.html.twig' with {'form': form} %}
            
            <table class="table gtreetable" 
                   id="gtreetable" 
                   data-url="{{ path('ia_taxonomy_api_terms_get_json_gtree_table', {'vocabularyId': vocabularies.id}) }}">
                <thead>
                    <tr>
                        <th>Terms</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
{% endblock content %}


{% block endDocumentScripts %}
    {{ parent() }}

    {% javascripts filter="?uglifyjs2" output="assets/build/layout.js" 
        '@IATaxonomyBundle/Resources/public/vendor/bootstrap-gtreetable/dist/bootstrap-gtreetable.js'
    %}
        <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    
    <script type="text/javascript">
        $(function() {
            {#$('.termsContainer').duplicateFields({
                btnRemoveSelector: ".btnRemoveTerm",
                btnAddSelector:    ".btnAddTerm"
            });#}
            
            $('#gtreetable').gtreetable({
                source: function (id) {
                    return {
                        type: 'GET',
                        url: $('#gtreetable').attr('data-url'),
                        data: { 'id': id },        
                        dataType: 'json',
                        error: function(XMLHttpRequest) {
                            alert(XMLHttpRequest.status+': '+XMLHttpRequest.responseText);
                        }
                    }
                },
                types: { 
                    default: 'glyphicon glyphicon-folder-open'
                },
                
                // Events
                onSave:function (oNode) {
                    return {
                        type: 'POST',
                        url: !oNode.isSaved() ? 'nodeCreate' : 'nodeUpdate?id=' + oNode.getId(),
                        data: {
                            parent: oNode.getParent(),
                            name: oNode.getName(),
                            position: oNode.getInsertPosition(),
                            related: oNode.getRelatedNodeId()
                        },
                        dataType: 'json',
                        error: function(XMLHttpRequest) {
                            alert(XMLHttpRequest.status+': '+XMLHttpRequest.responseText);
                        }
                      };
                  },
                  onDelete:function (oNode) {
                    return {
                        type: 'POST',
                        url: 'nodeDelete?id=' + oNode.getId(),
                        dataType: 'json',
                        error: function(XMLHttpRequest) {
                            alert(XMLHttpRequest.status+': '+XMLHttpRequest.responseText);
                        }
                    };
                }
            });
        });
    </script>

{% endblock %}
